import json
from datetime import datetime

'''
This script is to generate a csv file with all metrics we needed for wiki articles.

'''


month = {"Jan":"01","Feb":"02","Mar":"03","Apr":"04","May":"05","Jun":"06","Jul":"07","Aug":"08","Sep":"09","Oct":"10","Nov":"11","Dec":"12"}


def get_date(date):
	day = date.split()[1]
	mon = date.split()[2][:3]
	year = date.split()[3]
	return year + "-" + month[mon] + "-" + day

def convert_date(date):
	date = datetime.strptime(date, "%Y-%m-%d")
	return date

wiki_group_file = ""  # Enter the path of grouped talk page json file generated by get_grouped_talk_page.py or get_samplebio_grouped_talk_page.py
					 # An example is "../data/talkpage/wiki_talk_groups_politician.json"

wiki_stats_file = "" # Enter the path of summarized talk page json file generated by talk_stats_analysis.py or talk_stats_analysis_bio.py
					# An example is "../data/talkpage/wiki_talk_stats_politician.json"

out_file = "" #Enter desired output file name or path (.csv)

f = open(wiki_stats_file,"r")
f1 = open(wiki_group_file,"r")
f2 = open(out_file,"w")


f2.write("ArticleId,RelWeek,#total_comment,#editis_per_neweditor,#neweditors,#neweditors_comment,#reply_neweditors,fraction_talk_reply_neweditors\n")
final_match = {}
header = "#total_comment,#editis_per_neweditor,#neweditors,#neweditors_comment,#reply_neweditors,fraction_talk_reply_neweditors".split(",")

for line in f.readlines():
	line = json.loads(line)
	article_id=line.keys()[0]
	final_match[int(article_id)] = line[article_id] 
f.close()
print "....Loading Dictionary Complete...."
exist_id = []
for line in f1.readlines():
	talk_data = json.loads(line)
	article_id = talk_data["article_id"]
	if article_id in final_match:
		if article_id not in exist_id:
			exist_id.append(article_id)
			print len(exist_id),"/798"
		topic_id = talk_data["topic_id"]
		article_name = talk_data["article"]
		date = get_date(talk_data["time"])
		user = talk_data["user"]
		for week in final_match[article_id]:
			newcomerposts = final_match[article_id][week]["newcomer_posts"]
			if len(newcomerposts) > 0:
				for el in newcomerposts:
					usr,ts,tid,rd = el
					if user != usr:
						if convert_date(date)>convert_date(ts) and convert_date(date)<convert_date(rd):
							if topic_id == tid:
								final_match[article_id][week]["#reply_neweditors"] += 1
								final_match[article_id][week]["newcomer_posts"].remove(el)

print ".....Writing Files...."
for article_id in final_match:
	for week in final_match[article_id]:
		num_new_comment = final_match[article_id][week]["#neweditors_comment"]
		num_reply = final_match[article_id][week]["#reply_neweditors"]
		if num_new_comment != 0:
			final_match[article_id][week]["fraction_talk_reply_neweditors"] = 1.0*num_reply/num_new_comment
		else:
			final_match[article_id][week]["fraction_talk_reply_neweditors"] = "NA"
		f2.write(str(article_id) + "," + str(week) + ",")
		f2.write(",".join([str(final_match[article_id][week][col]) for col in header]))
		f2.write("\n")



